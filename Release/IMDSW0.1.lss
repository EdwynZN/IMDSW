
IMDSW0.1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001b4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	41 c0       	rjmp	.+130    	; 0x88 <__bad_interrupt>
   6:	00 00       	nop
   8:	3f c0       	rjmp	.+126    	; 0x88 <__bad_interrupt>
   a:	00 00       	nop
   c:	3d c0       	rjmp	.+122    	; 0x88 <__bad_interrupt>
   e:	00 00       	nop
  10:	3b c0       	rjmp	.+118    	; 0x88 <__bad_interrupt>
  12:	00 00       	nop
  14:	39 c0       	rjmp	.+114    	; 0x88 <__bad_interrupt>
  16:	00 00       	nop
  18:	37 c0       	rjmp	.+110    	; 0x88 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	35 c0       	rjmp	.+106    	; 0x88 <__bad_interrupt>
  1e:	00 00       	nop
  20:	33 c0       	rjmp	.+102    	; 0x88 <__bad_interrupt>
  22:	00 00       	nop
  24:	31 c0       	rjmp	.+98     	; 0x88 <__bad_interrupt>
  26:	00 00       	nop
  28:	2f c0       	rjmp	.+94     	; 0x88 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	2d c0       	rjmp	.+90     	; 0x88 <__bad_interrupt>
  2e:	00 00       	nop
  30:	2b c0       	rjmp	.+86     	; 0x88 <__bad_interrupt>
  32:	00 00       	nop
  34:	29 c0       	rjmp	.+82     	; 0x88 <__bad_interrupt>
  36:	00 00       	nop
  38:	27 c0       	rjmp	.+78     	; 0x88 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	25 c0       	rjmp	.+74     	; 0x88 <__bad_interrupt>
  3e:	00 00       	nop
  40:	23 c0       	rjmp	.+70     	; 0x88 <__bad_interrupt>
  42:	00 00       	nop
  44:	21 c0       	rjmp	.+66     	; 0x88 <__bad_interrupt>
  46:	00 00       	nop
  48:	1f c0       	rjmp	.+62     	; 0x88 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	1d c0       	rjmp	.+58     	; 0x88 <__bad_interrupt>
  4e:	00 00       	nop
  50:	1b c0       	rjmp	.+54     	; 0x88 <__bad_interrupt>
  52:	00 00       	nop
  54:	19 c0       	rjmp	.+50     	; 0x88 <__bad_interrupt>
  56:	00 00       	nop
  58:	17 c0       	rjmp	.+46     	; 0x88 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	15 c0       	rjmp	.+42     	; 0x88 <__bad_interrupt>
  5e:	00 00       	nop
  60:	13 c0       	rjmp	.+38     	; 0x88 <__bad_interrupt>
  62:	00 00       	nop
  64:	11 c0       	rjmp	.+34     	; 0x88 <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a0 30       	cpi	r26, 0x00	; 0
  80:	b1 07       	cpc	r27, r17
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	5e d0       	rcall	.+188    	; 0x142 <main>
  86:	94 c0       	rjmp	.+296    	; 0x1b0 <_exit>

00000088 <__bad_interrupt>:
  88:	bb cf       	rjmp	.-138    	; 0x0 <__vectors>

0000008a <adc_init>:
  8a:	ea e7       	ldi	r30, 0x7A	; 122
  8c:	f0 e0       	ldi	r31, 0x00	; 0
  8e:	80 81       	ld	r24, Z
  90:	80 68       	ori	r24, 0x80	; 128
  92:	80 83       	st	Z, r24
  94:	08 95       	ret

00000096 <adc_read>:
  96:	90 91 7c 00 	lds	r25, 0x007C
  9a:	90 7f       	andi	r25, 0xF0	; 240
  9c:	90 93 7c 00 	sts	0x007C, r25
  a0:	90 91 7c 00 	lds	r25, 0x007C
  a4:	98 2b       	or	r25, r24
  a6:	90 93 7c 00 	sts	0x007C, r25
  aa:	90 91 7e 00 	lds	r25, 0x007E
  ae:	98 2b       	or	r25, r24
  b0:	90 93 7e 00 	sts	0x007E, r25
  b4:	80 91 7a 00 	lds	r24, 0x007A
  b8:	80 64       	ori	r24, 0x40	; 64
  ba:	80 93 7a 00 	sts	0x007A, r24
  be:	80 91 7a 00 	lds	r24, 0x007A
  c2:	86 fd       	sbrc	r24, 6
  c4:	fc cf       	rjmp	.-8      	; 0xbe <adc_read+0x28>
  c6:	20 91 78 00 	lds	r18, 0x0078
  ca:	30 91 79 00 	lds	r19, 0x0079
  ce:	c9 01       	movw	r24, r18
  d0:	08 95       	ret

000000d2 <PWM_init>:
  d2:	84 b1       	in	r24, 0x04	; 4
  d4:	86 60       	ori	r24, 0x06	; 6
  d6:	84 b9       	out	0x04, r24	; 4
  d8:	8f ef       	ldi	r24, 0xFF	; 255
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	90 93 89 00 	sts	0x0089, r25
  e0:	80 93 88 00 	sts	0x0088, r24
  e4:	8f ef       	ldi	r24, 0xFF	; 255
  e6:	92 e0       	ldi	r25, 0x02	; 2
  e8:	90 93 8b 00 	sts	0x008B, r25
  ec:	80 93 8a 00 	sts	0x008A, r24
  f0:	a1 e8       	ldi	r26, 0x81	; 129
  f2:	b0 e0       	ldi	r27, 0x00	; 0
  f4:	8c 91       	ld	r24, X
  f6:	81 60       	ori	r24, 0x01	; 1
  f8:	8c 93       	st	X, r24
  fa:	e0 e8       	ldi	r30, 0x80	; 128
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	80 81       	ld	r24, Z
 100:	80 6a       	ori	r24, 0xA0	; 160
 102:	80 83       	st	Z, r24
 104:	80 81       	ld	r24, Z
 106:	83 60       	ori	r24, 0x03	; 3
 108:	80 83       	st	Z, r24
 10a:	8c 91       	ld	r24, X
 10c:	88 60       	ori	r24, 0x08	; 8
 10e:	8c 93       	st	X, r24
 110:	08 95       	ret

00000112 <uart_init>:
 112:	10 92 c5 00 	sts	0x00C5, r1
 116:	80 e1       	ldi	r24, 0x10	; 16
 118:	80 93 c4 00 	sts	0x00C4, r24
 11c:	e0 ec       	ldi	r30, 0xC0	; 192
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	82 60       	ori	r24, 0x02	; 2
 124:	80 83       	st	Z, r24
 126:	86 e0       	ldi	r24, 0x06	; 6
 128:	80 93 c2 00 	sts	0x00C2, r24
 12c:	88 e1       	ldi	r24, 0x18	; 24
 12e:	80 93 c1 00 	sts	0x00C1, r24
 132:	08 95       	ret

00000134 <uart_getchar>:
 134:	80 91 c0 00 	lds	r24, 0x00C0
 138:	87 ff       	sbrs	r24, 7
 13a:	fc cf       	rjmp	.-8      	; 0x134 <uart_getchar>
 13c:	80 91 c6 00 	lds	r24, 0x00C6
 140:	08 95       	ret

00000142 <main>:
 142:	ef 92       	push	r14
 144:	ff 92       	push	r15
 146:	0f 93       	push	r16
 148:	1f 93       	push	r17
 14a:	df 93       	push	r29
 14c:	cf 93       	push	r28
 14e:	cd b7       	in	r28, 0x3d	; 61
 150:	de b7       	in	r29, 0x3e	; 62
 152:	61 97       	sbiw	r28, 0x11	; 17
 154:	0f b6       	in	r0, 0x3f	; 63
 156:	f8 94       	cli
 158:	de bf       	out	0x3e, r29	; 62
 15a:	0f be       	out	0x3f, r0	; 63
 15c:	cd bf       	out	0x3d, r28	; 61
 15e:	d9 df       	rcall	.-78     	; 0x112 <uart_init>
 160:	b8 df       	rcall	.-144    	; 0xd2 <PWM_init>
 162:	93 df       	rcall	.-218    	; 0x8a <adc_init>
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	7e 01       	movw	r14, r28
 168:	08 94       	sec
 16a:	e1 1c       	adc	r14, r1
 16c:	f1 1c       	adc	r15, r1
 16e:	0b c0       	rjmp	.+22     	; 0x186 <main+0x44>
 170:	99 8b       	std	Y+17, r25	; 0x11
 172:	e0 df       	rcall	.-64     	; 0x134 <uart_getchar>
 174:	99 89       	ldd	r25, Y+17	; 0x11
 176:	f7 01       	movw	r30, r14
 178:	e9 0f       	add	r30, r25
 17a:	f1 1d       	adc	r31, r1
 17c:	80 83       	st	Z, r24
 17e:	89 81       	ldd	r24, Y+1	; 0x01
 180:	8e 37       	cpi	r24, 0x7E	; 126
 182:	09 f4       	brne	.+2      	; 0x186 <main+0x44>
 184:	9f 5f       	subi	r25, 0xFF	; 255
 186:	90 31       	cpi	r25, 0x10	; 16
 188:	98 f3       	brcs	.-26     	; 0x170 <main+0x2e>
 18a:	19 82       	std	Y+1, r1	; 0x01
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	83 df       	rcall	.-250    	; 0x96 <adc_read>
 190:	90 93 8b 00 	sts	0x008B, r25
 194:	80 93 8a 00 	sts	0x008A, r24
 198:	1e 85       	ldd	r17, Y+14	; 0x0e
 19a:	00 e0       	ldi	r16, 0x00	; 0
 19c:	8f 85       	ldd	r24, Y+15	; 0x0f
 19e:	98 01       	movw	r18, r16
 1a0:	28 0f       	add	r18, r24
 1a2:	31 1d       	adc	r19, r1
 1a4:	30 93 89 00 	sts	0x0089, r19
 1a8:	20 93 88 00 	sts	0x0088, r18
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	e0 cf       	rjmp	.-64     	; 0x170 <main+0x2e>

000001b0 <_exit>:
 1b0:	f8 94       	cli

000001b2 <__stop_program>:
 1b2:	ff cf       	rjmp	.-2      	; 0x1b2 <__stop_program>
